########################################################################################
# "yarn install" composite action for yarn 2/3/4+ and "nodeLinker: node-modules"       #
#--------------------------------------------------------------------------------------#
# Cache:                                                                               #
#   - Downloaded zip archive (multi-arch, preserved across yarn.lock changes)          #
#   - Yarn install state (discarded on yarn.lock changes)                              #
# References:                                                                          #
#   - bench: https://gist.github.com/belgattitude/0ecd26155b47e7be1be6163ecfbb0f0b     #
#   - vs @setup/node: https://github.com/actions/setup-node/issues/325                 #
########################################################################################

name: "Yarn install"
description: "Run yarn install with node_modules linker and cache enabled"
inputs:
  node_version:
    required: false
    default: v18.x

runs:
  using: "composite"
  steps:
    # Step 1: Install Yarn 3.4.1
    - name: Install Yarn 3.4.1
      run: npm install -g yarn@3.4.1

    # Step 2: Use Node version specified in the input
    - name: Use Node ${{ inputs.node_version }}
      uses: buildjet/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}

    # Step 3: Expose yarn config
    - name: Expose yarn config as "$GITHUB_OUTPUT"
      id: yarn-config
      shell: bash
      run: |
        echo "CACHE_FOLDER=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    # Step 4: Restore yarn cache
    - name: Restore yarn cache
      uses: buildjet/cache@v3
      id: yarn-download-cache
      with:
        path: ${{ steps.yarn-config.outputs.CACHE_FOLDER }}
        key: yarn-download-cache-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          yarn-download-cache-

    # Step 5: Restore node_modules
    - name: Restore node_modules
      id: yarn-nm-cache
      uses: buildjet/cache@v3
      with:
        path: "**/node_modules/"
        key: ${{ runner.os }}-yarn-nm-cache-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    # Step 6: Restore yarn install state
    - name: Restore yarn install state
      id: yarn-install-state-cache
      uses: buildjet/cache@v3
      with:
        path: .yarn/ci-cache/
        key: ${{ runner.os }}-yarn-install-state-cache-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    # Step 7: Install dependencies using Yarn 3.4.1
    - name: Install dependencies
      shell: bash
      run: |
        yarn install --inline-builds
        yarn prisma generate
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: "false"
        YARN_ENABLE_GLOBAL_CACHE: "false"
        YARN_INSTALL_STATE_PATH: .yarn/ci-cache/install-state.gz
        YARN_NM_MODE: "hardlinks-local"
        HUSKY: "0"
